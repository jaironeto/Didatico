"- literal de objeto definindo a __proto__, shorthand handler: handler, super chamada",
"- finally retornando o valor unico do bloco, try...catch",
"- acessa propriedade com notação de colchetes que nao seria acessivel com de ponto",
"- agregação de modulos",
"- alinhamento catch em promise",
"- aqui está o gerador de fibonacci usando next(x)para reiniciar a sequência:",
"- as eu uma importação de uma default",
"- as no export e import esses recursos renomeados",
"- carregamento dinamico de modulo import() com then e await",
"- construtor retornando valor diferente de new",
"- criar e acessar um objeto com uma propriedade que é outro objeto",
"- criar slots vazio em array com ,,",
"- encadear promise depois de um catch",
"- estabelecendo a herança prototípica em um literal de objeto",
"- event handlers",
"- event listeners",
"- export multiplos item na ultima linha do arquivo",
"- export na frente do item, maneira mais facil",
"- export/import classe e usar-la em instanciação",
"- exportação padrao na mesma intrução, forma mais basica",
"- exportações nomeadas",
"- finally",
"- import com as",
"- import maneira mais simples multiplos item entre { }",
"- import todos os recursos com *",
"- importação de export default",
"- incorporar expressões em template string",
"- iteráveis definido no [Symbol.iterator]",
"- içamento de variação e função",
"- label",
"- literais RegExp",
"- literal bigint",
"- literal binario",
"- matriz dentro de uma matriz",
"- mixins",
"- mudar dimensão array com lenght",
"- notação de colchetes e notação normal",
"- os 2 acessador de objetos[. e colchetes]",
"- parametro rest",
"- substituir toString aprimorado com super",
"- usar o resultado de uma promise, no caso, cadeia de promise",
"- usar recursos importados",
"- uso de Reflect objeto",
"- uso de proxy objeto",
